<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | Michael Herman]]></title>
  <link href="http://mherman.org/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://mherman.org/"/>
  <updated>2016-03-31T16:10:00-06:00</updated>
  <id>http://mherman.org/</id>
  <author>
    <name><![CDATA[Michael Herman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Managing Multiple Github Accounts]]></title>
    <link href="http://mherman.org/blog/2013/09/16/managing-multiple-github-accounts/"/>
    <updated>2013-09-16T07:43:00-06:00</updated>
    <id>http://mherman.org/blog/2013/09/16/managing-multiple-github-accounts</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s look at how to manage multiple Github accounts from one computer. In essence, it&rsquo;s simply a matter of balancing both your git and ssh configurations - which actually is not as bad as it might seem.</p>

<blockquote><p>Note: This tutorial is meant for Unix users.</p></blockquote>

<h2>Set up SSH Keys</h2>

<p>Let&rsquo;s assume your two Github accounts are named <em>githubPersonal</em> and <em>githubWork</em>, respectively.</p>

<p>Create two SSH keys, saving each to a separate file:</p>

<pre><code class="sh">$ cd ~/.ssh
$ ssh-keygen -t rsa -C "your_email@associated_with_githubPersonal.com"
# save it as id_rsa_personal when prompted
$ ssh-keygen -t rsa -C "your_email@associated_with_githubWork.com"
# save it as id_rsa_work when prompted
</code></pre>

<p>The above commands setup the following files:</p>

<ul>
<li><em>id_rsa_personal</em></li>
<li><em>id_rsa_personal.pub</em></li>
<li><em>id_rsa_work</em></li>
<li><em>id_rsa_work.pub</em></li>
</ul>


<h2>Add the keys to your Github accounts:</h2>

<h4>Copy the key to your clipboard:</h4>

<pre><code class="sh">$ pbcopy &lt; ~/.ssh/id_rsa_personal.pub
</code></pre>

<h4>Add the key to your account:</h4>

<ul>
<li>Go to your Account Settings</li>
<li>Click &ldquo;SSH Keys&rdquo; then &ldquo;Add SSH key&rdquo;</li>
<li>Paste your key into the &ldquo;Key&rdquo; field and add a relevant title</li>
<li>Click &ldquo;Add key&rdquo; then enter your Github password to confirm</li>
</ul>


<h4>Repeat the process for your <em>githubWork</em> account.</h4>

<h2>Create a configuration file to manage the separate keys</h2>

<h4>Create a config file in ~/.ssh/</h4>

<pre><code class="sh">$ touch config
</code></pre>

<h4>Edit the file using the text editor of your choice. I used vim - <code>$ vim config</code>:</h4>

<pre><code class="sh"># githubPersonal
Host personal
   HostName github.com
   User git
   IdentityFile ~/.ssh/id_rsa_personal

# githubWork
Host work
   HostName github.com
   User git
   IdentityFile ~/.ssh/id_rsa_work
</code></pre>

<h2>Update stored identities</h2>

<h4>Clear currently stored identities:</h4>

<pre><code class="sh">$ ssh-add -D
</code></pre>

<h4>Add new keys:</h4>

<pre><code class="sh">$ ssh-add id_rsa_personal
$ ssh-add id_rsa_work
</code></pre>

<h4>Test to make sure new keys are stored:</h4>

<pre><code class="sh">$ ssh-add -l
</code></pre>

<h4>Test to make sure Github recognizes the keys:</h4>

<pre><code class="sh">$ ssh -T personal
Hi githubPersonal! You've successfully authenticated, but GitHub does not provide shell access.
$ ssh -T work
Hi githubWork! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<h2>Test PUSH</h2>

<h4>On Github, create a new repo in your personal account, <em>githubPersonal</em>, called <em>test-personal</em>.</h4>

<h4>Back on your local machine, create a test directory:</h4>

<pre><code class="sh">$ cd ~/documents
$ mkdir test-personal
$ cd test-personal
</code></pre>

<h4>Add a blank &ldquo;readme.md&rdquo; file and PUSH to Github:</h4>

<pre><code class="sh">$ touch readme.md
$ git init
$ git add .
$ git commit -am "first commit"
$ git remote add origin git@personal:githubPersonal/test-personal.git
$ git push origin master
</code></pre>

<blockquote><p>Notice how we&rsquo;re using the custom account, <code>git@personal</code>, instead of <code>git@github.com</code>.</p></blockquote>

<h4>Repeat the process for your <em>githubWork</em> account.</h4>

<h2>Test PULL</h2>

<h4>Add some text to the <em>readme.md</em> file in your personal account on Github.</h4>

<h4>Now PULL and merge the changes by running the following command within the <em>test-personal</em> directory:</h4>

<pre><code class="sh">$ git pull origin master
</code></pre>

<h4>Again, repeat this for your <em>githubWork</em> account.</h4>

<p><br/></p>

<p>Questons? Comments? Did I miss something? Comment below.</p>
]]></content>
  </entry>
  
</feed>
