<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Michael Herman]]></title>
  <link href="http://mjhea0.github.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://mjhea0.github.com/"/>
  <updated>2015-08-23T14:22:50-06:00</updated>
  <id>http://mjhea0.github.com/</id>
  <author>
    <name><![CDATA[Michael Herman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Managing Multiple Github Accounts]]></title>
    <link href="http://mjhea0.github.com/blog/2013/09/16/managing-multiple-github-accounts/"/>
    <updated>2013-09-16T07:43:00-06:00</updated>
    <id>http://mjhea0.github.com/blog/2013/09/16/managing-multiple-github-accounts</id>
    <content type="html"><![CDATA[<p>Let&#39;s look at how to manage multiple Github accounts from one computer. In essence, it&#39;s simply a matter of balancing both your git and ssh configurations - which actually is not as bad as it might seem.</p>

<blockquote>
<p>Note: This tutorial is meant for Unix users.</p>
</blockquote>

<h2>Set up SSH Keys</h2>

<p>Let&#39;s assume your two Github accounts are named <em>githubPersonal</em> and <em>githubWork</em>, respectively.</p>

<p>Create two SSH keys, saving each to a separate file:</p>

<p>```sh<br>
$ cd ~/.ssh<br>
$ ssh-keygen -t rsa -C &quot;your<em>email@associated</em>with_githubPersonal.com&quot;</p>

<h1>save it as id<em>rsa</em>personal when prompted</h1>

<p>$ ssh-keygen -t rsa -C &quot;your<em>email@associated</em>with_githubWork.com&quot;</p>

<h1>save it as id<em>rsa</em>work when prompted</h1>

<p>```</p>

<p>The above commands setup the following files:</p>

<ul>
<li><em>id<em>rsa</em>personal</em></li>
<li><em>id<em>rsa</em>personal.pub</em></li>
<li><em>id<em>rsa</em>work</em></li>
<li><em>id<em>rsa</em>work.pub</em></li>
</ul>

<h2>Add the keys to your Github accounts:</h2>

<h4>Copy the key to your clipboard:</h4>

<p><code>sh<br>
$ pbcopy &lt; ~/.ssh/id_rsa_personal.pub<br>
</code></p>

<h4>Add the key to your account:</h4>

<ul>
<li>Go to your Account Settings</li>
<li>Click &quot;SSH Keys&quot; then &quot;Add SSH key&quot;</li>
<li>Paste your key into the &quot;Key&quot; field and add a relevant title</li>
<li>Click &quot;Add key&quot; then enter your Github password to confirm</li>
</ul>

<h4>Repeat the process for your <em>githubWork</em> account.</h4>

<h2>Create a configuration file to manage the separate keys</h2>

<h4>Create a config file in ~/.ssh/</h4>

<p><code>sh<br>
$ touch config<br>
</code></p>

<h4>Edit the file using the text editor of your choice. I used vim - <code>$ vim config</code>:</h4>

<p>```sh</p>

<h1>githubPersonal</h1>

<p>Host personal<br>
   HostName github.com<br>
   User git<br>
   IdentityFile ~/.ssh/id<em>rsa</em>personal</p>

<h1>githubWork</h1>

<p>Host work<br>
   HostName github.com<br>
   User git<br>
   IdentityFile ~/.ssh/id<em>rsa</em>work<br>
```</p>

<h2>Update stored identities</h2>

<h4>Clear currently stored identities:</h4>

<p><code>sh<br>
$ ssh-add -D<br>
</code></p>

<h4>Add new keys:</h4>

<p><code>sh<br>
$ ssh-add id_rsa_personal<br>
$ ssh-add id_rsa_work<br>
</code></p>

<h4>Test to make sure new keys are stored:</h4>

<p><code>sh<br>
$ ssh-add -l<br>
</code></p>

<h4>Test to make sure Github recognizes the keys:</h4>

<p><code>sh<br>
$ ssh -T personal<br>
Hi githubPersonal! You&#39;ve successfully authenticated, but GitHub does not provide shell access.<br>
$ ssh -T work<br>
Hi githubWork! You&#39;ve successfully authenticated, but GitHub does not provide shell access.<br>
</code></p>

<h2>Test PUSH</h2>

<h4>On Github, create a new repo in your personal account, <em>githubPersonal</em>, called <em>test-personal</em>.</h4>

<h4>Back on your local machine, create a test directory:</h4>

<p><code>sh<br>
$ cd ~/documents<br>
$ mkdir test-personal<br>
$ cd test-personal<br>
</code></p>

<h4>Add a blank &quot;readme.md&quot; file and PUSH to Github:</h4>

<p><code>sh<br>
$ touch readme.md<br>
$ git init<br>
$ git add .<br>
$ git commit -am &quot;first commit&quot;<br>
$ git remote add origin git@personal:githubPersonal/test-personal.git<br>
$ git push origin master<br>
</code></p>

<blockquote>
<p>Notice how we&#39;re using the custom account, <code>git@personal</code>, instead of <code>git@github.com</code>.</p>
</blockquote>

<h4>Repeat the process for your <em>githubWork</em> account.</h4>

<h2>Test PULL</h2>

<h4>Add some text to the <em>readme.md</em> file in your personal account on Github.</h4>

<h4>Now PULL and merge the changes by running the following command within the <em>test-personal</em> directory:</h4>

<p><code>sh<br>
$ git pull origin master<br>
</code></p>

<h4>Again, repeat this for your <em>githubWork</em> account.</h4>

<p><br/></p>

<p>Questons? Comments? Did I miss something? Comment below.</p>
]]></content>
  </entry>
  
</feed>
